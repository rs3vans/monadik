group 'com.github.rs3vans.monadik'
version '1.1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.0.3'
    ext.dokka_version = '0.9.9'
    ext.bintray_version = '1.7'
    ext.junit5_version = '1.0.0-M2'
    ext.spek_version = '1.0.89'

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintray_version"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junit5_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testCompile "org.jetbrains.spek:spek-api:$spek_version",
            'com.natpryce:hamkrest:1.2.1.0'
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:$spek_version"
}

junitPlatform {
    engines {
        include 'spek'
    }
}

dokka {
    moduleName = 'monadik'
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
    processConfigurations = ['compile']
    linkMapping {
        dir = "src/main/kotlin"
        url = "https://github.com/cy6erGn0m/vertx3-lang-kotlin/blob/master/src/main/kotlin"
        suffix = "#L"
    }
    sourceDirs = files('src/main/kotlin')
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['MonadikPublication']
    pkg {
        repo = 'maven'
        name = 'monadik'
        userOrg = user
        licenses = ['MIT']
        vcsUrl = 'https://github.com/rs3vans/monadik.git'
        version {
            name = project.version
            desc = 'MonadiK - ' + project.version
            vcsTag = project.version
        }
    }
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task dokkaJar(type: Jar, dependsOn: dokkaJavadoc) {
    from dokkaJavadoc.outputDirectory
    classifier = 'javadoc'
}

artifacts {
    archives sourcesJar, dokkaJar
}

publishing {
    publications {
        MonadikPublication(MavenPublication) {
            from components.java
            groupId 'com.github.rs3vans.monadik'
            artifactId 'monadik'
            version project.version
            artifact sourcesJar
            artifact dokkaJar
        }
    }
}
